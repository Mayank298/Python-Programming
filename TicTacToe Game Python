#########################################################################################################################
################################################ Milestone Project 1 ####################################################
#########################################################################################################################

#########################################################################################################################
############################################### Definition of Function ##################################################
#########################################################################################################################
from IPython.display import clear_output

#### This function is only use for new game instruction
def first_time_run():
    '''
    Desc: This Function display the position for new game
    '''
    
    print('**** Wlcome to Tic Tac Toe! ****')
    print('Tic Tac Toe! Board With Position')
    print('7|8|9')
    print('*****')
    print('4|5|6')
    print('*****')
    print('1|2|3\n\n\n')
    

#### New Function Display Board and pirint the user Choice
def display_board(board):
    '''
    Desc: This function will display the choice on board
    Argument: board is a List
    '''
    print('{}|{}|{}'.format(board[7],board[8],board[9]))
    print('*****')
    print('{}|{}|{}'.format(board[4],board[5],board[6]))
    print('*****')
    print('{}|{}|{}\n\n\n'.format(board[1],board[2],board[3]))

    
    
#### This function will allocate choice of player
def player_input():
    
    '''
    Desc: This function will ask for the player choice of selection 
    Input: "X" or "O"
    '''
    
    select = ''
    
    while not (select == 'X' or select == 'O'):
        select = input('Player 1: Do you want to be X or O? ').upper()

    if select == 'X':
        return ('X', 'O')
    else:
        return ('O', 'X')
    
    
#### Allocate selection to position in list    
def place_marker(board, marker, position):
    '''
    Desc: allocate marker to board list position
    '''
    board[position] = marker

    
#### This function Will check for win or lose 
def win_check(board, mark):
    '''
    Desc: Will check anyone is wining or not
    '''
        
    return ((board[1] == mark and board[2] == mark and board[3] == mark) or
            (board[4] == mark and board[5] == mark and board[6] == mark) or
            (board[7] == mark and board[8] == mark and board[9] == mark) or
            (board[1] == mark and board[5] == mark and board[9] == mark)or
            (board[1] == mark and board[4] == mark and board[7] == mark) or
            (board[2] == mark and board[5] == mark and board[8] == mark) or
            (board[3] == mark and board[6] == mark and board[9] == mark) or
            (board[3] == mark and board[5] == mark and board[7] == mark) )


#### This function will check which player will go first

import random

def choose_first():
    '''
    Desc: Which player will go first if 0 player 2 goes first else player 1.
    '''
    if random.randint(0, 1) == 0:
        return 'Player 2'
    else:
        return 'Player 1'


#### This function will check for position is available or not
def space_check(board, position):
    '''
    Desc: Its check that board[position] is empty or already taken.
    '''
    return board[position] == ' '


#### This function will check if board is full or have any space.
def full_board_check(board):
    '''
    Desc: Will check board has any space or it Full.
    '''
    for i in range(1,10):
        if space_check(board, i):
            return False
    return True


#### This function will ask player for nest position:
def player_choice(board):
    '''
    Desc: Will ask player for next position.
    '''
    position = 0
    
    while position not in [1,2,3,4,5,6,7,8,9] or not space_check(board, position):
        position = int(input('Choose your next position: (1-9) '))
        
    return position


#### This function will ask player if they want to play again or not
def replay():
    '''
    Desc: Players want to play agin or not
    
    '''
    return (input('Are you ready to play? Enter Yes or No: ').upper().startswith('Y'))


####End of All Function.

#########################################################################################################################
################################################ Main Program ###########################################################
#########################################################################################################################

first_time_run()

while True:
    board_lst = [' ']*10
    player1_mark,player2_mark = player_input()
    turn = choose_first()
    print(turn+' will go first. \n')
    start_choice = input('Are you ready to play? Enter Yes or No: ').upper()
    start = False
    if(start_choice.upper()[0] == 'Y'):
        start = True
    else:
        start = False
    
    while start:
        if turn.lower() == 'player 1':  #Player 1 Turn
            display_board(board_lst)
            position = player_choice(board_lst)
            place_marker(board_lst, player1_mark, position)

            if win_check(board_lst, player1_mark):
                display_board(board_lst)
                print('Congratulations! You have won the game!')
                start = False
            else:
                if full_board_check(board_lst):
                    display_board(board_lst)
                    print('The game is a draw!')
                    break
                else:
                    turn = 'Player 2'

        else:
            # Player2's turn.
            
            display_board(board_lst)
            position = player_choice(board_lst)
            place_marker(board_lst, player2_mark, position)

            if win_check(board_lst, player2_mark):
                display_board(board_lst)
                print('Player 2 has won!')
                start = False
            else:
                if full_board_check(board_lst):
                    display_board(board_lst)
                    print('The game is a draw!')
                    break
                else:
                    turn = 'Player 1'
              
    if (start_choice == 'NO') or (not replay()):
        break
        
        
#########################################################################################################################
################################################ End Of The Program #####################################################
#########################################################################################################################
